# Generated by Django 4.0.1 on 2022-01-21 02:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Tag',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Post Title')),
                ('text', models.TextField(verbose_name="Post's Text")),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(verbose_name='Time Edited')),
                ('post_abstract', models.CharField(blank=True, max_length=200, verbose_name='Abstract')),
                ('like_count', models.IntegerField(default=0, verbose_name='Likes Count')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.category', verbose_name='Post Category')),
                ('tags', models.ManyToManyField(blank=True, to='blog.Tag', verbose_name='Post Relevant Tag')),
            ],
            options={
                'verbose_name': 'Post',
            },
        ),
    ]
